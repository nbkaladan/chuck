# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/chuck-back/.bundle

# Ignore the default SQLite database.
/chuck-back/db/*.sqlite3
/chuck-back/db/*.sqlite3-*

# Ignore all logfiles and tempfiles.
/chuck-back/log/*
/chuck-back/tmp/*
!/chuck-back/log/.keep
!/chuck-back/tmp/.keep

# Ignore pidfiles, but keep the directory.
/chuck-back/tmp/pids/*
!/chuck-back/tmp/pids/
!/chuck-back/tmp/pids/.keep

# Ignore uploaded files in development.
/chuck-back/storage/*
!/chuck-back/storage/.keep
/chuck-back/tmp/storage/*
!/chuck-back/tmp/storage/
!/chuck-back/tmp/storage/.keep

/chuck-back/public/assets

# Ignore master key for decrypting credentials and more.
/chuck-back/config/master.key

.vscode

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log

# OS generated files #
######################
.DS_Store*
ehthumbs.db
Icon?
Thumbs.db

# Editor Files #
################
*~
*.swp

# Gradle Files #
################
.gradle
.m2
gradle.properties

# Build output directies
target
*/target
build
*/build

# IntelliJ specific files/directories
out
.idea
*.ipr
*.iws
*.iml
atlassian-ide-plugin.xml

# Eclipse specific files/directories
.classpath
.project
.settings
.metadata

# NetBeans specific files/directories
.nbattrs
/nbactions.xml

# VSCode specific files/directories
.vscode

# Front end
node_modules
npm-debug*.log*
dist
coverage
